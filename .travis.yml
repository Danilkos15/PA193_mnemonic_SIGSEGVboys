language: cpp
dist: bionic 

branch:
  - master

before_script:
  - mkdir build
  - cd build

addons:
  apt:
    packages:
        - g++
        - clang
        - openssl

matrix:
  include:
    # gcc compilation
    - os: linux
      compiler: gcc
      env:
        - TEST="GCC 7 compilation"
      script:
        - cmake .. -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++
        - make all 

    # clang compilation
    - os: linux
      compiler: clang
      env:
        - TEST="Clang-7 compilation"
      script:
        - cmake .. -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
        - make all

    # run tests
    - os: linux
      compiler: gcc 
      env:
        - TEST="Running testsuite"
      addons:
        apt:
          packages:
              - g++
              - openssl
              - lcov
      script:
        - cmake .. -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DENABLE_COVERAGE=ON
        - make test 
        - lcov --directory . --capture --output-file coverage.info
        - lcov --remove coverage.info '/usr/*' "${HOME}"'/.cache/*' "**/tests/*" --output-file coverage.info
        - lcov --list coverage.info
        - bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports" 

    # clang tidy analysis
    - os: linux
      env:
        - TEST="ClangTidy analysis"
      addons:
        apt:
          sources:
            - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
          packages:
            - clang-tidy
      script:
        - clang-tidy -header-filter=.* ../src/*.cpp -- -std=c++17

    # cppcheck analysis
    - os: linux
      env:
        - TEST="CppCheck analysis"
      addons:
        apt: 
          packages:
            - cppcheck 
      script:
        - cppcheck --version
        - cppcheck --error-exitcode=1 --enable=all ../src/*.hpp ../src/*.cpp

    # valgrind
    - os: linux
      compiler: gcc
      env:
        - TEST="Valgrind"
      addons:
        apt:
          packages:
              - g++ 
              - openssl
              - valgrind
      script:
        - cmake .. -DENABLE_VALGRIND=ON -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++
        - make all
        - valgrind --version
        - valgrind --leak-check=full --show-reachable=yes --track-origins=yes --error-exitcode=1 ./testsuite
